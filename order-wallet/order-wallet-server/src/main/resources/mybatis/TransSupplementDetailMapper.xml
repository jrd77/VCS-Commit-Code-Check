<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atzuche.order.wallet.server.mapper.TransSupplementDetailMapper">
  <resultMap id="BaseResultMap" type="com.atzuche.order.wallet.server.entity.TransSupplementDetailEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_no" jdbcType="BIGINT" property="orderNo" />
    <result column="mem_no" jdbcType="INTEGER" property="memNo" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="amt" jdbcType="INTEGER" property="amt" />
    <result column="tsp_id" jdbcType="INTEGER" property="tspId" />
    <result column="flow_id" jdbcType="INTEGER" property="flowId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="op_status" jdbcType="TINYINT" property="opStatus" />
    <result column="supplement_type" jdbcType="TINYINT" property="supplementType" />
    <result column="op_type" jdbcType="TINYINT" property="opType" />
    <result column="request_pay_code" jdbcType="VARCHAR" property="requestPayCode" />
    <result column="cash_type" jdbcType="VARCHAR" property="cashType" />
    <result column="cash_no" jdbcType="INTEGER" property="cashNo" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="pay_flag" jdbcType="INTEGER" property="payFlag" />
    <result column="is_notice" jdbcType="TINYINT" property="isNotice" />
    <result column="settle_deposit" jdbcType="TINYINT" property="settleDeposit" />
    <result column="settle_rent" jdbcType="TINYINT" property="settleRent" />
    <result column="is_used" jdbcType="TINYINT" property="isUsed" />
    <result column="old_op_status" jdbcType="TINYINT" property="oldOpStatus" />
    <result column="old_pay_flag" jdbcType="TINYINT" property="oldPayFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_op" jdbcType="VARCHAR" property="createOp" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_op" jdbcType="VARCHAR" property="updateOp" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pid_back" jdbcType="INTEGER" property="pidBack" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no, mem_no, title, amt, tsp_id, flow_id, order_id, op_status, supplement_type, 
    op_type, request_pay_code, cash_type, cash_no, remark, pay_flag, is_notice, settle_deposit, 
    settle_rent, is_used, old_op_status, old_pay_flag, create_time, create_op, update_time, 
    update_op, is_delete, pid, pid_back
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trans_supplement_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findDebtByMemNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from trans_supplement_detail
    where mem_no=#{memNo} and cash_type = 3 AND pay_flag IN (1,4,5) order by id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trans_supplement_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.atzuche.order.wallet.server.entity.TransSupplementDetailEntity" useGeneratedKeys="true">
    insert into trans_supplement_detail (order_no, mem_no, title, 
      amt, tsp_id, flow_id, 
      order_id, op_status, supplement_type, 
      op_type, request_pay_code, cash_type, 
      cash_no, remark, pay_flag, 
      is_notice, settle_deposit, settle_rent, 
      is_used, old_op_status, old_pay_flag, 
      create_time, create_op, update_time, 
      update_op, is_delete, pid, 
      pid_back)
    values (#{orderNo,jdbcType=BIGINT}, #{memNo,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{amt,jdbcType=INTEGER}, #{tspId,jdbcType=INTEGER}, #{flowId,jdbcType=INTEGER}, 
      #{orderId,jdbcType=VARCHAR}, #{opStatus,jdbcType=TINYINT}, #{supplementType,jdbcType=TINYINT}, 
      #{opType,jdbcType=TINYINT}, #{requestPayCode,jdbcType=VARCHAR}, #{cashType,jdbcType=BOOLEAN}, 
      #{cashNo,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{payFlag,jdbcType=INTEGER}, 
      #{isNotice,jdbcType=TINYINT}, #{settleDeposit,jdbcType=TINYINT}, #{settleRent,jdbcType=TINYINT}, 
      #{isUsed,jdbcType=TINYINT}, #{oldOpStatus,jdbcType=TINYINT}, #{oldPayFlag,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createOp,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateOp,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT}, #{pid,jdbcType=INTEGER}, 
      #{pidBack,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.atzuche.order.wallet.server.entity.TransSupplementDetailEntity" useGeneratedKeys="true">
    insert into trans_supplement_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="memNo != null">
        mem_no,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="amt != null">
        amt,
      </if>
      <if test="tspId != null">
        tsp_id,
      </if>
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="opStatus != null">
        op_status,
      </if>
      <if test="supplementType != null">
        supplement_type,
      </if>
      <if test="opType != null">
        op_type,
      </if>
      <if test="requestPayCode != null">
        request_pay_code,
      </if>
      <if test="cashType != null">
        cash_type,
      </if>
      <if test="cashNo != null">
        cash_no,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="payFlag != null">
        pay_flag,
      </if>
      <if test="isNotice != null">
        is_notice,
      </if>
      <if test="settleDeposit != null">
        settle_deposit,
      </if>
      <if test="settleRent != null">
        settle_rent,
      </if>
      <if test="isUsed != null">
        is_used,
      </if>
      <if test="oldOpStatus != null">
        old_op_status,
      </if>
      <if test="oldPayFlag != null">
        old_pay_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createOp != null">
        create_op,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateOp != null">
        update_op,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="pidBack != null">
        pid_back,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="memNo != null">
        #{memNo,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=INTEGER},
      </if>
      <if test="tspId != null">
        #{tspId,jdbcType=INTEGER},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="opStatus != null">
        #{opStatus,jdbcType=TINYINT},
      </if>
      <if test="supplementType != null">
        #{supplementType,jdbcType=TINYINT},
      </if>
      <if test="opType != null">
        #{opType,jdbcType=TINYINT},
      </if>
      <if test="requestPayCode != null">
        #{requestPayCode,jdbcType=VARCHAR},
      </if>
      <if test="cashType != null">
        #{cashType,jdbcType=BOOLEAN},
      </if>
      <if test="cashNo != null">
        #{cashNo,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payFlag != null">
        #{payFlag,jdbcType=INTEGER},
      </if>
      <if test="isNotice != null">
        #{isNotice,jdbcType=TINYINT},
      </if>
      <if test="settleDeposit != null">
        #{settleDeposit,jdbcType=TINYINT},
      </if>
      <if test="settleRent != null">
        #{settleRent,jdbcType=TINYINT},
      </if>
      <if test="isUsed != null">
        #{isUsed,jdbcType=TINYINT},
      </if>
      <if test="oldOpStatus != null">
        #{oldOpStatus,jdbcType=TINYINT},
      </if>
      <if test="oldPayFlag != null">
        #{oldPayFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOp != null">
        #{createOp,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOp != null">
        #{updateOp,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pidBack != null">
        #{pidBack,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.atzuche.order.wallet.server.entity.TransSupplementDetailEntity">
    update trans_supplement_detail
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="memNo != null">
        mem_no = #{memNo,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        amt = #{amt,jdbcType=INTEGER},
      </if>
      <if test="tspId != null">
        tsp_id = #{tspId,jdbcType=INTEGER},
      </if>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="opStatus != null">
        op_status = #{opStatus,jdbcType=TINYINT},
      </if>
      <if test="supplementType != null">
        supplement_type = #{supplementType,jdbcType=TINYINT},
      </if>
      <if test="opType != null">
        op_type = #{opType,jdbcType=TINYINT},
      </if>
      <if test="requestPayCode != null">
        request_pay_code = #{requestPayCode,jdbcType=VARCHAR},
      </if>
      <if test="cashType != null">
        cash_type = #{cashType},
      </if>
      <if test="cashNo != null">
        cash_no = #{cashNo,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payFlag != null">
        pay_flag = #{payFlag,jdbcType=INTEGER},
      </if>
      <if test="isNotice != null">
        is_notice = #{isNotice,jdbcType=TINYINT},
      </if>
      <if test="settleDeposit != null">
        settle_deposit = #{settleDeposit,jdbcType=TINYINT},
      </if>
      <if test="settleRent != null">
        settle_rent = #{settleRent,jdbcType=TINYINT},
      </if>
      <if test="isUsed != null">
        is_used = #{isUsed,jdbcType=TINYINT},
      </if>
      <if test="oldOpStatus != null">
        old_op_status = #{oldOpStatus,jdbcType=TINYINT},
      </if>
      <if test="oldPayFlag != null">
        old_pay_flag = #{oldPayFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOp != null">
        create_op = #{createOp,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOp != null">
        update_op = #{updateOp,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="pidBack != null">
        pid_back = #{pidBack,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atzuche.order.wallet.server.entity.TransSupplementDetailEntity">
    update trans_supplement_detail
    set order_no = #{orderNo,jdbcType=BIGINT},
      mem_no = #{memNo,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      amt = #{amt,jdbcType=INTEGER},
      tsp_id = #{tspId,jdbcType=INTEGER},
      flow_id = #{flowId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      op_status = #{opStatus,jdbcType=TINYINT},
      supplement_type = #{supplementType,jdbcType=TINYINT},
      op_type = #{opType,jdbcType=TINYINT},
      request_pay_code = #{requestPayCode,jdbcType=VARCHAR},
      cash_type = #{cashType},
      cash_no = #{cashNo,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      pay_flag = #{payFlag,jdbcType=INTEGER},
      is_notice = #{isNotice,jdbcType=TINYINT},
      settle_deposit = #{settleDeposit,jdbcType=TINYINT},
      settle_rent = #{settleRent,jdbcType=TINYINT},
      is_used = #{isUsed,jdbcType=TINYINT},
      old_op_status = #{oldOpStatus,jdbcType=TINYINT},
      old_pay_flag = #{oldPayFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_op = #{createOp,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_op = #{updateOp,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      pid = #{pid,jdbcType=INTEGER},
      pid_back = #{pidBack,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePayStatus">
     update trans_supplement_detail
     set pay_flag=3
     where id=#{id}
  </update>
  
  <select id="listRentDepositDebt" resultType="com.atzuche.order.wallet.server.entity.DepositDebtVO">
  	SELECT DISTINCT pay_kind as payKind,trans_kind as transKind,trans_type as transType,trans_amt as transAmt FROM trans_pay tp 
	INNER JOIN trans_free_double tfd ON tp.order_no=tfd.order_no
	LEFT JOIN trans t ON tp.`order_no` = t.`order_no`
	 WHERE tfd.`id` IS NOT NULL AND tfd.`free_double_type_id` = 2 AND tp.source = 6 
	 AND t.`pay_flag` = 8
	 AND tp.`pay_kind`=1
	 AND tp.`trans_type`='03'
	 AND ( tp.trans_status != '00' AND (tp.st IS NULL OR tp.st != '4') )  AND  tp.mem_no = #{memNo}
  </select>
  
  <select id="listIllegalDepositDebt" resultType="com.atzuche.order.wallet.server.entity.DepositDebtVO">
  	SELECT DISTINCT pay_kind as payKind,trans_kind as transKind,trans_type as transType,trans_amt as transAmt FROM trans_pay tp 
	INNER JOIN trans_free_double tfd ON tp.order_no=tfd.order_no
	LEFT JOIN trans t ON tp.`order_no` = t.`order_no`
	 WHERE tfd.`id` IS NOT NULL AND tfd.`free_double_type_id` = 2 AND tp.source = 6 
	 AND t.`deposit_pay_flag` = 8
	 AND tp.`pay_kind`=2
	 AND tp.`trans_type`='03'
	 AND ( tp.trans_status != '00' AND (tp.st IS NULL OR tp.st != '4') )  AND  tp.mem_no = #{memNo}
  </select>
  <select id="findDebtByMemberNoList" resultType="com.atzuche.order.commons.entity.dto.MemberDebtListReqDTO" parameterType="com.atzuche.order.commons.entity.dto.MemberDebtListReqDTO">
    SELECT DISTINCT
        m.reg_no as memNo,
        m.mobile as mobile,
        m.real_name as realName
    FROM
        trans_supplement_detail as tsd
        left join member as m on tsd.mem_no=m.reg_no
    WHERE
        cash_type = 3
        AND pay_flag IN ( 1, 4, 5 )
          <if test="memNo != null">
           and m.reg_no = #{memNo}
          </if>
          <if test="mobile != null">
            and m.mobile = #{mobile}
          </if>
          <if test="realName != null">
            and m.real_name like concat('%',#{realName},'%')
          </if>
    ORDER BY
        mem_no desc
  </select>
  <select id="findMemberList" resultType="com.atzuche.order.commons.entity.dto.MemberDebtListReqDTO" parameterType="com.atzuche.order.commons.entity.dto.MemberDebtListReqDTO">
    SELECT DISTINCT
    m.reg_no as memNo,
    m.mobile as mobile,
    m.real_name as realName
    FROM
     member as m
    WHERE
    <if test="memNo != null">
      and m.reg_no = #{memNo}
    </if>
    <if test="mobile != null">
      and m.mobile = #{mobile}
    </if>
    <if test="realName != null">
      and m.real_name like concat('%',#{realName},'%')
    </if>
    ORDER BY
    reg_no desc
  </select>

</mapper>