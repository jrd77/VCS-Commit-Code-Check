<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atzuche.order.accountownerincome.mapper.AddIncomeExamineMapper" >
  <resultMap id="BaseResultMap" type="com.atzuche.order.accountownerincome.entity.AddIncomeExamine" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="mem_no" property="memNo" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="mem_type" property="memType" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="detail_type" property="detailType" jdbcType="VARCHAR" />
    <result column="amt" property="amt" jdbcType="INTEGER" />
    <result column="describe" property="describe" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="DATE" />
    <result column="orig_debt" property="origDebt" jdbcType="INTEGER" />
    <result column="now_debt" property="nowDebt" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="add_id" property="addId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_op" property="createOp" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_op" property="updateOp" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_no, mem_no, mobile, name, mem_type, type, detail_type, amt, `describe`, department, 
    apply_time, orig_debt, now_debt, status, remark, add_id, create_time, create_op, update_time, 
    update_op, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from add_income_examine
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from add_income_examine
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.atzuche.order.accountownerincome.entity.AddIncomeExamine" >
    insert into add_income_examine (id, order_no, mem_no, 
      mobile, name, mem_type, 
      type, detail_type, amt, 
      `describe`, department, apply_time, 
      orig_debt, now_debt, status, 
      remark, create_time, create_op, 
      update_time, update_op, is_delete
      )
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{memNo,jdbcType=INTEGER}, 
      #{mobile,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{memType,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{detailType,jdbcType=VARCHAR}, #{amt,jdbcType=INTEGER}, 
      #{describe,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{applyTime,jdbcType=DATE}, 
      #{origDebt,jdbcType=INTEGER}, #{nowDebt,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createOp,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateOp,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atzuche.order.accountownerincome.entity.AddIncomeExamine" >
    insert into add_income_examine
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="memNo != null" >
        mem_no,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="memType != null" >
        mem_type,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="detailType != null" >
        detail_type,
      </if>
      <if test="amt != null" >
        amt,
      </if>
      <if test="describe != null" >
        `describe`,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="origDebt != null" >
        orig_debt,
      </if>
      <if test="nowDebt != null" >
        now_debt,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createOp != null" >
        create_op,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateOp != null" >
        update_op,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="memNo != null" >
        #{memNo,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="memType != null" >
        #{memType,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="detailType != null" >
        #{detailType,jdbcType=VARCHAR},
      </if>
      <if test="amt != null" >
        #{amt,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=DATE},
      </if>
      <if test="origDebt != null" >
        #{origDebt,jdbcType=INTEGER},
      </if>
      <if test="nowDebt != null" >
        #{nowDebt,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOp != null" >
        #{createOp,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOp != null" >
        #{updateOp,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.atzuche.order.accountownerincome.entity.AddIncomeExamine" >
    update add_income_examine
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="memNo != null" >
        mem_no = #{memNo,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="memType != null" >
        mem_type = #{memType,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="detailType != null" >
        detail_type = #{detailType,jdbcType=VARCHAR},
      </if>
      <if test="amt != null" >
        amt = #{amt,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=DATE},
      </if>
      <if test="origDebt != null" >
        orig_debt = #{origDebt,jdbcType=INTEGER},
      </if>
      <if test="nowDebt != null" >
        now_debt = #{nowDebt,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOp != null" >
        create_op = #{createOp,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOp != null" >
        update_op = #{updateOp,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atzuche.order.accountownerincome.entity.AddIncomeExamine" >
    update add_income_examine
    set order_no = #{orderNo,jdbcType=VARCHAR},
      mem_no = #{memNo,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      mem_type = #{memType,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      detail_type = #{detailType,jdbcType=VARCHAR},
      amt = #{amt,jdbcType=INTEGER},
      `describe` = #{describe,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=DATE},
      orig_debt = #{origDebt,jdbcType=INTEGER},
      now_debt = #{nowDebt,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_op = #{createOp,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_op = #{updateOp,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id ="saveAddIncomeExamineBatch" parameterType="java.util.List" >
  	insert into add_income_examine (order_no, mem_no, 
      mobile, name, mem_type, 
      type, detail_type, amt, 
      `describe`, department, apply_time, 
      orig_debt, now_debt, add_id
      )
    values 
    <foreach collection ="list" item="aie" index= "index" separator =",">
    (#{aie.orderNo}, #{aie.memNo}, 
      #{aie.mobile}, #{aie.name}, #{aie.memType}, 
      #{aie.type}, #{aie.detailType}, #{aie.amt}, 
      #{aie.describe}, #{aie.department}, #{aie.applyTime}, 
      #{aie.origDebt}, #{aie.nowDebt}, #{aie.addId}
      )
    </foreach>
  </insert>
  
  <select id="getCountByAddIdAndStatus" resultType="Integer" parameterType="Long" >
    select 
    count(*)
    from add_income_examine
    where add_id = #{addId} and status != 0
  </select>
  
  <delete id="delAddIncomeExamineByAddId" parameterType="Long">
	DELETE FROM add_income_examine WHERE add_id=#{addId}
  </delete>
  
  <sql id="whereCondition">
		<where>
			AND is_delete=0
			<if test="orderNo != null and orderNo != 0">AND order_no=#{orderNo}</if>
			<if test="mobile != null and mobile != ''">AND mobile=#{mobile}</if>
			<if test="memNo != null and memNo != ''">AND mem_no=#{memNo}</if>
			<if test="name != null and name != ''">AND name=#{name}</if>
			<if test="department != null and department != ''">AND department=#{department}</if>
			<if test="status != null">AND status=#{status}</if>
			<if test="createTimeBegin != null and createTimeBegin != ''">AND create_time &gt;= STR_TO_DATE('${createTimeBegin}', '%Y-%m-%d %k:%i:%s')</if>
			<if test="createTimeEnd != null and createTimeEnd != ''">AND create_time &lt;= STR_TO_DATE('${createTimeEnd}', '%Y-%m-%d %k:%i:%s')</if>
			<if test="examineTimeBegin != null and examineTimeBegin != ''">AND update_time &gt;= STR_TO_DATE('${examineTimeBegin}', '%Y-%m-%d %k:%i:%s')</if>
			<if test="examineTimeEnd != null and examineTimeEnd != ''">AND update_time &lt;= STR_TO_DATE('${examineTimeEnd}', '%Y-%m-%d %k:%i:%s')</if>
			<if test="applyDateBegin != null and applyDateBegin != ''">AND apply_time &gt;= STR_TO_DATE('${applyDateBegin}', '%Y-%m-%d')</if>
			<if test="applyDateEnd != null and applyDateEnd != ''">AND apply_time &lt;= STR_TO_DATE('${applyDateEnd}', '%Y-%m-%d')</if>
		</where>
	</sql>
  
  <select id="queryAddIncomeExamine" resultMap="BaseResultMap" parameterType="com.atzuche.order.commons.entity.dto.AddIncomeExamineQueryDTO" >
    select 
    <include refid="Base_Column_List" />
    from add_income_examine
    <include refid="whereCondition"/> 
	ORDER BY id DESC 
	LIMIT #{startIndex}, #{pageSize} 
  </select>
  
  <select id="listAllAddIncomeExamine" resultMap="BaseResultMap" parameterType="com.atzuche.order.commons.entity.dto.AddIncomeExamineDTO" >
    select 
    <include refid="Base_Column_List" />
    from add_income_examine
    <include refid="whereCondition"/> 
	ORDER BY id DESC 
  </select>
  
  <select id="queryCount" resultType="Integer" parameterType="com.atzuche.order.commons.entity.dto.AddIncomeExamineDTO" >
    select 
    count(*)
    from add_income_examine
    <include refid="whereCondition"/> 
  </select>
  
  <update id="updateAddIncomeExaminePass" parameterType="com.atzuche.order.accountownerincome.entity.AddIncomeExamine" >
    update add_income_examine
    set 
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_op = #{createOp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
    and status != #{status,jdbcType=INTEGER}
  </update>
  
</mapper>