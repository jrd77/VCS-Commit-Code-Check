<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atzuche.order.accountownerincome.mapper.AccountOwnerSecondaryIncomeInoutDetailMapper">

    <resultMap type="com.atzuche.order.accountownerincome.entity.AccountOwnerSecondaryIncomeInoutDetailEntity" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="memNo" column="mem_no"/>
        <result property="ownerIncomeId" column="owner_income_id"/>
        <result property="incomeAmtBefore" column="income_amt_before"/>
        <result property="inOutAmt" column="in_out_amt"/>
        <result property="incomeAmtAfter" column="income_amt_after"/>
        <result property="createTime" column="create_time"/>
        <result property="createOp" column="create_op"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateOp" column="update_op"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>


	<sql id="Base_Column_List">
        `id`,
        `mem_no`,
        `owner_income_id`,
        `income_amt_before`,
        `in_out_amt`,
        `income_amt_after`,
        `create_time`,
        `create_op`,
        `update_time`,
        `update_op`,
        `is_delete`
	</sql>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from account_owner_secondary_income_inout_detail where id = #{value}
	</select>


    <select id="selectByOwnerIncomeId" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from account_owner_secondary_income_inout_detail where `owner_income_id` = #{value}
    </select>

	<insert id="insert" parameterType="com.atzuche.order.accountownerincome.entity.AccountOwnerSecondaryIncomeInoutDetailEntity" useGeneratedKeys="true" keyProperty="id">
		insert into account_owner_secondary_income_inout_detail (
            `mem_no`,
            `owner_income_id`,
            `income_amt_before`,
            `in_out_amt`,
            `income_amt_after`,
            `create_time`,
            `create_op`,
            `update_time`,
            `update_op`,
            `is_delete`
        )
		values
		(
            #{memNo},
            #{ownerIncomeId},
            #{incomeAmtBefore},
            #{inOutAmt},
            #{incomeAmtAfter},
            #{createTime},
            #{createOp},
            #{updateTime},
            #{updateOp},
            #{isDelete}
        )
	</insert>
	
	<insert id="insertSelective" parameterType="com.atzuche.order.accountownerincome.entity.AccountOwnerSecondaryIncomeInoutDetailEntity" useGeneratedKeys="true" keyProperty="id">
		insert into account_owner_secondary_income_inout_detail
            <trim prefix="(" suffix=")" suffixOverrides="," >
				<if test="memNo != null">`mem_no`, </if>
				<if test="ownerIncomeId != null">`owner_income_id`, </if>
				<if test="incomeAmtBefore != null">`income_amt_before`, </if>
				<if test="inOutAmt != null">`in_out_amt`, </if>
				<if test="incomeAmtAfter != null">`income_amt_after`, </if>
				<if test="createTime != null">`create_time`, </if>
				<if test="createOp != null">`create_op`, </if>
				<if test="updateTime != null">`update_time`, </if>
				<if test="updateOp != null">`update_op`, </if>
				<if test="isDelete != null">`is_delete` </if>
	        </trim>
            <trim prefix="values (" suffix=")" suffixOverrides="," >
				<if test="memNo != null">#{memNo},  </if>
				<if test="ownerIncomeId != null">#{ownerIncomeId},  </if>
				<if test="incomeAmtBefore != null">#{incomeAmtBefore},  </if>
				<if test="inOutAmt != null">#{inOutAmt},  </if>
				<if test="incomeAmtAfter != null">#{incomeAmtAfter},  </if>
				<if test="createTime != null">#{createTime},  </if>
				<if test="createOp != null">#{createOp},  </if>
				<if test="updateTime != null">#{updateTime},  </if>
				<if test="updateOp != null">#{updateOp},  </if>
				<if test="isDelete != null">#{isDelete} </if>
	        </trim>
	</insert>
	
	 
	<update id="updateByPrimaryKeySelective" parameterType="com.atzuche.order.accountownerincome.entity.AccountOwnerSecondaryIncomeInoutDetailEntity">
		update account_owner_secondary_income_inout_detail 
		    <set>
				<if test="memNo != null">`mem_no` = #{memNo}, </if>
				<if test="ownerIncomeId != null">`owner_income_id` = #{ownerIncomeId}, </if>
				<if test="incomeAmtBefore != null">`income_amt_before` = #{incomeAmtBefore}, </if>
				<if test="inOutAmt != null">`in_out_amt` = #{inOutAmt}, </if>
				<if test="incomeAmtAfter != null">`income_amt_after` = #{incomeAmtAfter}, </if>
				<if test="createTime != null">`create_time` = #{createTime}, </if>
				<if test="createOp != null">`create_op` = #{createOp}, </if>
				<if test="updateTime != null">`update_time` = #{updateTime}, </if>
				<if test="updateOp != null">`update_op` = #{updateOp}, </if>
				<if test="isDelete != null">`is_delete` = #{isDelete}</if>
			</set>
		where id = #{id}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.atzuche.order.accountownerincome.entity.AccountOwnerSecondaryIncomeInoutDetailEntity">
		update account_owner_secondary_income_inout_detail 
		    <set>
				`mem_no` = #{memNo},
				`owner_income_id` = #{ownerIncomeId},
				`income_amt_before` = #{incomeAmtBefore},
				`in_out_amt` = #{inOutAmt}, 		
				`income_amt_after` = #{incomeAmtAfter}, 		
				`create_time` = #{createTime}, 		
				`create_op` = #{createOp}, 		
				`update_time` = #{updateTime}, 		
				`update_op` = #{updateOp}, 		
				`is_delete` = #{isDelete}		
		    </set>
		where id = #{id}
	</update>
  	
</mapper>