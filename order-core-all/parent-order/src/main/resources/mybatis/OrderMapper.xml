<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.atzuche.order.parentorder.mapper.OrderMapper">

    <resultMap type="com.atzuche.order.parentorder.entity.OrderEntity" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="memNoRenter" column="mem_no_renter"/>
        <result property="category" column="category"/>
        <result property="entryCode" column="entry_code"/>
        <result property="source" column="source"/>
        <result property="expRentTime" column="exp_rent_time"/>
        <result property="expRevertTime" column="exp_revert_time"/>
        <result property="cityName" column="city_name"/>
        <result property="cityCode" column="city_code"/>
        <result property="isOutCity" column="is_out_city"/>
        <result property="rentCity" column="rent_city"/>
        <result property="isFreeDeposit" column="is_free_deposit"/>
        <result property="isUseAirPortService" column="is_use_air_port_Service"/>
        <result property="flightId" column="flight_id"/>
        <result property="reqTime" column="req_time"/>
        <result property="limitAmt" column="limit_amt"/>
        <result property="riskAuditId" column="risk_audit_id"/>
        <result property="version" column="version"/>
        <result property="basePath" column="base_path"/>
        <result property="createTime" column="create_time"/>
        <result property="createOp" column="create_op"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateOp" column="update_op"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>


    <sql id="Base_Column_List">
	`id`,
	`order_no`,
	`mem_no_renter`,
	`category`,
	`entry_code`,
	`source`,
	`exp_rent_time`,
	`exp_revert_time`,
	`city_name`,
	`city_code`,
	`is_out_city`,
	`rent_city`,
	`is_free_deposit`,
	`is_use_air_port_Service`,
	`flight_id`,
	`req_time`,
	`limit_amt`,
	`risk_audit_id`,
	`version`,
	`base_path`,
	`create_time`,
	`create_op`,
	`update_time`,
	`update_op`,
	`is_delete`

	</sql>


    <insert id="insert" parameterType="com.atzuche.order.parentorder.entity.OrderEntity" useGeneratedKeys="true" keyProperty="id">
        insert into `order`
        (
        `order_no`,
        `mem_no_renter`,
        `category`,
        `entry_code`,
        `source`,
        `exp_rent_time`,
        `exp_revert_time`,
        `city_name`,
        `city_code`,
        `is_out_city`,
        `rent_city`,
        `is_free_deposit`,
        `is_use_air_port_Service`,
        `flight_id`,
        `req_time`,
        `limit_amt`,
        `risk_audit_id`,
        `version`,
        `base_path`,
        `create_op`,
        `update_op`
        )
        values
        (
        #{orderNo},
        #{memNoRenter},
        #{category},
        #{entryCode},
        #{source},
        #{expRentTime},
        #{expRevertTime},
        #{cityName},
        #{cityCode},
        #{isOutCity},
        #{rentCity},
        #{isFreeDeposit},
        #{isUseAirPortService},
        #{flightId},
        #{reqTime},
        #{limitAmt},
        #{riskAuditId},
        #{version},
        #{basePath},
        #{createOp},
        #{updateOp}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.atzuche.order.parentorder.entity.OrderEntity" useGeneratedKeys="true" keyProperty="id">
        insert into `order`
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orderNo != null">`order_no`, </if>
            <if test="memNoRenter != null">`mem_no_renter`, </if>
            <if test="category != null">`category`, </if>
            <if test="entryCode != null">`entry_code`, </if>
            <if test="source != null">`source`, </if>
            <if test="expRentTime != null">`exp_rent_time`, </if>
            <if test="expRevertTime != null">`exp_revert_time`, </if>
            <if test="cityName != null">`city_name`, </if>
            <if test="cityCode != null">`city_code`, </if>
            <if test="isOutCity != null">`is_out_city`, </if>
            <if test="rentCity != null">`rent_city`, </if>
            <if test="isFreeDeposit != null">`is_free_deposit`, </if>
            <if test="isUseAirPortService != null">`is_use_air_port_Service`, </if>
            <if test="flightId != null">`flight_id`, </if>
            <if test="reqTime != null">`req_time`, </if>
            <if test="limitAmt != null">`limit_amt`, </if>
            <if test="riskAuditId != null">`risk_audit_id`, </if>
            <if test="version != null">`version`, </if>
            <if test="basePath != null">`base_path`, </if>
            <if test="createOp != null">`create_op`, </if>
            <if test="updateOp != null">`update_op` </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orderNo != null">#{orderNo},  </if>
            <if test="memNoRenter != null">#{memNoRenter},  </if>
            <if test="category != null">#{category},  </if>
            <if test="entryCode != null">#{entryCode},  </if>
            <if test="source != null">#{source},  </if>
            <if test="expRentTime != null">#{expRentTime},  </if>
            <if test="expRevertTime != null">#{expRevertTime},  </if>
            <if test="cityName != null">#{cityName},  </if>
            <if test="cityCode != null">#{cityCode},  </if>
            <if test="isOutCity != null">#{isOutCity},  </if>
            <if test="rentCity != null">#{rentCity},  </if>
            <if test="isFreeDeposit != null">#{isFreeDeposit},  </if>
            <if test="isUseAirPortService != null">#{isUseAirPortService},  </if>
            <if test="flightId != null">#{flightId},  </if>
            <if test="reqTime != null">#{reqTime},  </if>
            <if test="limitAmt != null">#{limitAmt},  </if>
            <if test="riskAuditId != null">#{riskAuditId},  </if>
            <if test="version != null">#{version},  </if>
            <if test="basePath != null">#{basePath},  </if>
            <if test="createOp != null">#{createOp},  </if>
            <if test="updateOp != null">#{updateOp} </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.atzuche.order.parentorder.entity.OrderEntity">
        update `order`
        <set>
            <if test="orderNo != null">`order_no` = #{orderNo}, </if>
            <if test="memNoRenter != null">`mem_no_renter` = #{memNoRenter}, </if>
            <if test="category != null">`category` = #{category}, </if>
            <if test="entryCode != null">`entry_code` = #{entryCode}, </if>
            <if test="source != null">`source` = #{source}, </if>
            <if test="expRentTime != null">`exp_rent_time` = #{expRentTime}, </if>
            <if test="expRevertTime != null">`exp_revert_time` = #{expRevertTime}, </if>
            <if test="cityName != null">`city_name` = #{cityName}, </if>
            <if test="cityCode != null">`city_code` = #{cityCode}, </if>
            <if test="isOutCity != null">`is_out_city` = #{isOutCity}, </if>
            <if test="rentCity != null">`rent_city` = #{rentCity}, </if>
            <if test="isFreeDeposit != null">`is_free_deposit` = #{isFreeDeposit}, </if>
            <if test="isUseAirPortService != null">`is_use_air_port_Service` = #{isUseAirPortService}, </if>
            <if test="flightId != null">`flight_id` = #{flightId}, </if>
            <if test="reqTime != null">`req_time` = #{reqTime}, </if>
            <if test="limitAmt != null">`limit_amt` = #{limitAmt}, </if>
            <if test="riskAuditId != null">`risk_audit_id` = #{riskAuditId}, </if>
            <if test="version != null">`version` = #{version}, </if>
            <if test="basePath != null">`base_path` = #{basePath}, </if>
            <if test="createTime != null">`create_time` = #{createTime}, </if>
            <if test="createOp != null">`create_op` = #{createOp}, </if>
            <if test="updateTime != null">`update_time` = #{updateTime}, </if>
            <if test="updateOp != null">`update_op` = #{updateOp}, </if>
            <if test="isDelete != null">`is_delete` = #{isDelete}</if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.atzuche.order.parentorder.entity.OrderEntity">
        update `order`
        <set>
            `order_no` = #{orderNo},
            `mem_no_renter` = #{memNoRenter},
            `category` = #{category},
            `entry_code` = #{entryCode},
            `source` = #{source},
            `exp_rent_time` = #{expRentTime},
            `exp_revert_time` = #{expRevertTime},
            `city_name` = #{cityName},
            `city_code` = #{cityCode},
            `is_out_city` = #{isOutCity},
            `is_out_city` = #{isOutCity},
            `is_free_deposit` = #{isFreeDeposit},
            `is_use_air_port_Service` = #{isUseAirPortService},
            `flight_id` = #{flightId},
            `req_time` = #{reqTime},
            `limit_amt` = #{limitAmt},
            `risk_audit_id` = #{riskAuditId},
            `version` = #{version},
            `base_path` = #{basePath},
            `create_time` = #{createTime},
            `create_op` = #{createOp},
            `update_time` = #{updateTime},
            `update_op` = #{updateOp},
            `is_delete` = #{isDelete}

        </set>
        where id = #{id}
    </update>

    <select id="selectByOrderNo" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from
            `order`
        where
            order_no = #{value}
            and is_delete = 0
        limit 1
    </select>

    <select id="queryOrderNoByOrderNos" resultType="com.atzuche.order.parentorder.dto.SuccessOrderDTO">
        select order_no orderNo,mem_no_renter renterNo from `order` where is_delete = 0 and order_no in
        <foreach collection="orderNos" open="(" close=")" separator="," item="orderNo">
            #{orderNo}
        </foreach>
    </select>
    
    <select id="getOrderByOrderNoAndMemNo" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from
            `order`
        where
            order_no = #{orderNo}
            and mem_no_renter = #{memNo}
            and is_delete = 0
        limit 1
    </select>

    <update id="updateByOrderNoSelective" parameterType="com.atzuche.order.parentorder.entity.OrderEntity">
        update `order`
        <set>
            <if test="orderNo != null">`order_no` = #{orderNo}, </if>
            <if test="memNoRenter != null">`mem_no_renter` = #{memNoRenter}, </if>
            <if test="category != null">`category` = #{category}, </if>
            <if test="entryCode != null">`entry_code` = #{entryCode}, </if>
            <if test="source != null">`source` = #{source}, </if>
            <if test="expRentTime != null">`exp_rent_time` = #{expRentTime}, </if>
            <if test="expRevertTime != null">`exp_revert_time` = #{expRevertTime}, </if>
            <if test="cityName != null">`city_name` = #{cityName}, </if>
            <if test="cityCode != null">`city_code` = #{cityCode}, </if>
            <if test="isOutCity != null">`is_out_city` = #{isOutCity}, </if>
            <if test="rentCity != null">`rent_city` = #{rentCity}, </if>
            <if test="isFreeDeposit != null">`is_free_deposit` = #{isFreeDeposit}, </if>
            <if test="isUseAirPortService != null">`is_use_air_port_Service` = #{isUseAirPortService}, </if>
            <if test="flightId != null">`flight_id` = #{flightId}, </if>
            <if test="reqTime != null">`req_time` = #{reqTime}, </if>
            <if test="limitAmt != null">`limit_amt` = #{limitAmt}, </if>
            <if test="riskAuditId != null">`risk_audit_id` = #{riskAuditId}, </if>
            <if test="version != null">`version` = #{version}, </if>
            <if test="basePath != null">`base_path` = #{basePath}, </if>
            <if test="createOp != null">`create_op` = #{createOp}, </if>
            <if test="updateOp != null">`update_op` = #{updateOp}, </if>
            <if test="isDelete != null">`is_delete` = #{isDelete}</if>
        </set>
        where order_no = #{orderNo}
    </update>
    <select id="getByOrderNos" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from
        `order`
        where
        order_no in
        <foreach collection="orderNos" open="(" separator="," close=")" item="orderNo">
            #{orderNo}
        </foreach>
    </select>
    <select id="getorderNoAll" resultType="java.lang.String">
        select `order_no` from `order`
    </select>
    <select id="getOrderByRenterMemNo" resultMap="BaseResultMap">
        select  <include refid="Base_Column_List" /> from `order`  where mem_no_renter =#{renterMemNo} and is_delete = 0 order by id desc
    </select>

    <select id="getOrderByMemNo" resultType="com.atzuche.order.commons.entity.dto.LianHeMaiTongOrderDTO">
        SELECT
            o.order_no AS orderNo,
            oo.renter_order_no AS renterOrderNo,
            oo.owner_order_no AS ownerOrderNo,
            o.exp_rent_time AS expRentTime,
            o.exp_revert_time  AS expRevertTime,
            o.req_time AS reqTime,
            o.rent_city AS rentCity,
            oo.show_rent_time AS showRentTime,
            oo.show_revert_time AS showRevertTime,
            oss.category AS category,
            os.status AS orderStatus,
            og.car_plate_num AS carPlateNum,
            og.car_type_txt AS carTypeTxt,
            roc.rent_car_amount AS rentAmt,
            om.real_name AS ownerName,
            om.mem_no AS ownerMemNo,
            om.phone AS ownerPhone,
            rm.real_name AS renterName,
            rm.mem_no AS renterMemNo,
            rm.phone AS renterPhone
        FROM `order` o
        INNER JOIN owner_order oo ON o.`order_no` = oo.`order_no`
        INNER JOIN `renter_order` ro ON oo.renter_order_no = ro.renter_order_no
        INNER JOIN order_status os ON o.`order_no` = os.`order_no`
        INNER JOIN order_source_stat oss ON o.order_no = oss.`order_no`
        INNER JOIN `renter_member` rm ON rm.`renter_order_no` = ro.`renter_order_no`
        INNER JOIN `owner_member` om ON om.owner_order_no = oo.owner_order_no
        INNER JOIN `renter_order_cost` roc ON ro.renter_order_no = roc.`renter_order_no`
        INNER JOIN owner_goods og ON oo.`owner_order_no` = og.`owner_order_no`
        WHERE oo.is_effective = 1
        AND (rm.`mem_no` = #{memNo} OR om.`mem_no` = #{memNo})
        order by o.id desc
        limit 100
    </select>

</mapper>