<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atzuche.order.ownercost.mapper.OwnerOrderMapper">

    <resultMap type="com.atzuche.order.ownercost.entity.OwnerOrderEntity" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="ownerOrderNo" column="owner_order_no"/>
        <result property="memNo" column="mem_no"/>
        <result property="showRentTime" column="show_rent_time"/>
        <result property="showRevertTime" column="show_revert_time"/>
        <result property="expRentTime" column="exp_rent_time"/>
        <result property="expRevertTime" column="exp_revert_time"/>
        <result property="actRentTime" column="act_rent_time"/>
        <result property="actRevertTime" column="act_revert_time"/>
        <result property="goodsCode" column="goods_code"/>
        <result property="goodsType" column="goods_type"/>
        <result property="childStatus" column="child_status"/>
        <result property="changeSource" column="change_source"/>
        <result property="isCancel" column="is_cancel"/>
        <result property="isEffective" column="is_effective"/>
        <result property="isUseSpecialPrice" column="is_use_special_price"/>
        <result property="dispatchReason" column="dispatch_reason"/>
        <result property="cancleOp" column="cancle_op"/>
        <result property="createTime" column="create_time"/>
        <result property="createOp" column="create_op"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateOp" column="update_op"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>


    <sql id="Base_Column_List">
	`id`, 	
	`order_no`, 	
	`owner_order_no`, 	
	`mem_no`,
	`show_rent_time`,
	`show_revert_time`,
	`exp_rent_time`,
	`exp_revert_time`,
	`act_rent_time`,
	`act_revert_time`,
	`goods_code`,
	`goods_type`,
	`child_status`,
	`change_source`,
	`is_cancel`,
	`is_effective`,
	`is_use_special_price`,
	`dispatch_reason`,
	`cancle_op`,
	`create_time`,
	`create_op`,
	`update_time`,
	`update_op`,
	`is_delete`

	</sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from owner_order where id = #{value}
    </select>

    <insert id="insert" parameterType="com.atzuche.order.ownercost.entity.OwnerOrderEntity" useGeneratedKeys="true" keyProperty="id">
        insert into owner_order
        (
        `order_no`,
        `owner_order_no`,
        `mem_no`,
        `show_rent_time`,
        `show_revert_time`,
        `exp_rent_time`,
        `exp_revert_time`,
        `act_rent_time`,
        `act_revert_time`,
        `goods_code`,
        `goods_type`,
        `child_status`,
        `change_source`,
        `is_cancel`,
        `is_effective`,
        `is_use_special_price`,
        `dispatch_reason`,
        `cancle_op`,
        `create_op`,
        `update_op`
        )
        values
        (
        #{orderNo},
        #{ownerOrderNo},
        #{memNo},
        #{showRentTime},
        #{showRevertTime},
        #{expRentTime},
        #{expRevertTime},
        #{actRentTime},
        #{actRevertTime},
        #{goodsCode},
        #{goodsType},
        #{childStatus},
        #{changeSource},
        #{isCancel},
        #{isEffective},
        #{isUseSpecialPrice},
        #{dispatchReason},
        #{cancleOp},
        #{createOp},
        #{updateOp}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.atzuche.order.ownercost.entity.OwnerOrderEntity" useGeneratedKeys="true" keyProperty="id">
        insert into owner_order
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orderNo != null">`order_no`, </if>
            <if test="ownerOrderNo != null">`owner_order_no`, </if>
            <if test="memNo != null">`mem_no`, </if>
            <if test="showRentTime != null">`show_rent_time`, </if>
            <if test="showRevertTime != null">`show_revert_time`, </if>
            <if test="expRentTime != null">`exp_rent_time`, </if>
            <if test="expRevertTime != null">`exp_revert_time`, </if>
            <if test="actRentTime != null">`act_rent_time`, </if>
            <if test="actRevertTime != null">`act_revert_time`, </if>
            <if test="goodsCode != null">`goods_code`, </if>
            <if test="goodsType != null">`goods_type`, </if>
            <if test="childStatus != null">`child_status`, </if>
            <if test="changeSource != null">`change_source`, </if>
            <if test="isCancel != null">`is_cancel`, </if>
            <if test="isEffective != null">`is_effective`, </if>
            <if test="isUseSpecialPrice != null">`is_use_special_price`, </if>
            <if test="dispatchReason != null">`dispatch_reason`, </if>
            <if test="cancleOp != null">`cancle_op`, </if>
            <if test="createTime != null">`create_time`, </if>
            <if test="createOp != null">`create_op`, </if>
            <if test="updateTime != null">`update_time`, </if>
            <if test="updateOp != null">`update_op`, </if>
            <if test="isDelete != null">`is_delete` </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orderNo != null">#{orderNo},  </if>
            <if test="ownerOrderNo != null">#{ownerOrderNo},  </if>
            <if test="memNo != null">#{memNo},  </if>
            <if test="showRentTime != null">#{showRentTime},  </if>
            <if test="showRevertTime != null">#{showRevertTime},  </if>
            <if test="expRentTime != null">#{expRentTime},  </if>
            <if test="expRevertTime != null">#{expRevertTime},  </if>
            <if test="actRentTime != null">#{actRentTime},  </if>
            <if test="actRevertTime != null">#{actRevertTime},  </if>
            <if test="goodsCode != null">#{goodsCode},  </if>
            <if test="goodsType != null">#{goodsType},  </if>
            <if test="childStatus != null">#{childStatus},  </if>
            <if test="changeSource != null">#{changeSource},  </if>
            <if test="isCancel != null">#{isCancel},  </if>
            <if test="isEffective != null">#{isEffective},  </if>
            <if test="isUseSpecialPrice != null">#{isUseSpecialPrice},  </if>
            <if test="dispatchReason != null">#{dispatchReason},  </if>
            <if test="cancleOp != null">#{cancleOp},  </if>
            <if test="createTime != null">#{createTime},  </if>
            <if test="createOp != null">#{createOp},  </if>
            <if test="updateTime != null">#{updateTime},  </if>
            <if test="updateOp != null">#{updateOp},  </if>
            <if test="isDelete != null">#{isDelete} </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.atzuche.order.ownercost.entity.OwnerOrderEntity">
        update owner_order
        <set>
            <if test="orderNo != null">`order_no` = #{orderNo}, </if>
            <if test="ownerOrderNo != null">`owner_order_no` = #{ownerOrderNo}, </if>
            <if test="memNo != null">`mem_no` = #{memNo}, </if>
            <if test="showRentTime != null">`show_rent_time` = #{showRentTime}, </if>
            <if test="showRevertTime != null">`show_revert_time` = #{showRevertTime}, </if>
            <if test="expRentTime != null">`exp_rent_time` = #{expRentTime}, </if>
            <if test="expRevertTime != null">`exp_revert_time` = #{expRevertTime}, </if>
            <if test="actRentTime != null">`act_rent_time` = #{actRentTime}, </if>
            <if test="actRevertTime != null">`act_revert_time` = #{actRevertTime}, </if>
            <if test="goodsCode != null">`goods_code` = #{goodsCode}, </if>
            <if test="goodsType != null">`goods_type` = #{goodsType}, </if>
            <if test="childStatus != null">`child_status` = #{childStatus}, </if>
            <if test="changeSource != null">`change_source` = #{changeSource}, </if>
            <if test="isCancel != null">`is_cancel` = #{isCancel}, </if>
            <if test="isEffective != null">`is_effective` = #{isEffective}, </if>
            <if test="isUseSpecialPrice != null">`is_use_special_price` = #{isUseSpecialPrice}, </if>
            <if test="dispatchReason != null">`dispatch_reason` = #{dispatchReason}, </if>
            <if test="cancleOp != null">`cancle_op` = #{cancleOp}, </if>
            <if test="createTime != null">`create_time` = #{createTime}, </if>
            <if test="createOp != null">`create_op` = #{createOp}, </if>
            <if test="updateTime != null">`update_time` = #{updateTime}, </if>
            <if test="updateOp != null">`update_op` = #{updateOp}, </if>
            <if test="isDelete != null">`is_delete` = #{isDelete}</if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.atzuche.order.ownercost.entity.OwnerOrderEntity">
        update owner_order
        <set>
            `order_no` = #{orderNo},
            `owner_order_no` = #{ownerOrderNo},
            `mem_no` = #{memNo},
            `show_rent_time` = #{showRentTime},
            `show_revert_time` = #{showRevertTime},
            `exp_rent_time` = #{expRentTime},
            `exp_revert_time` = #{expRevertTime},
            `act_rent_time` = #{actRentTime},
            `act_revert_time` = #{actRevertTime},
            `goods_code` = #{goodsCode},
            `goods_type` = #{goodsType},
            `child_status` = #{childStatus},
            `change_source` = #{changeSource},
            `is_cancel` = #{isCancel},
            `is_effective` = #{isEffective},
            `is_use_special_price` = #{isUseSpecialPrice},
            `dispatch_reason` = #{dispatchReason},
            `cancle_op` = #{cancleOp},
            `create_op` = #{createOp},
            `update_op` = #{updateOp},
            `is_delete` = #{isDelete}

        </set>
        where id = #{id}
    </update>

	<select id="getOwnerOrderByOrderNoAndIsEffective" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from owner_order where order_no = #{orderNo}
		and is_effective = 1
		and child_status = 3
		and is_cancel = 0
		and is_delete = 0
		order by id desc
		limit 1
    </select>
    
    <update id="updateOwnerOrderInvalidById">
    	update owner_order set is_effective = 0
    	where id = #{id}
    </update>

    <update id="updateOwnerOrderChildStatus">
		update owner_order set child_status = #{childStatus}
		where id = #{id}
	</update>
    <select id="getChangeOwnerByOrderNo" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from owner_order where order_no = #{orderNo}
        and is_effective = 0
        and is_cancel = 0
        and is_delete = 0
        and child_status = 3
        order by id desc
        limit 1
    </select>
    <select id="queryHostiryOwnerOrderByOrderNo" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from owner_order where order_no = #{orderNo}
        and is_delete = 0
        order by id desc
    </select>

</mapper>