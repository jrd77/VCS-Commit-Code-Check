<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atzuche.order.ownercost.mapper.OwnerOrderFineApplyMapper">

    <resultMap type="com.atzuche.order.ownercost.entity.OwnerOrderFineApplyEntity" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="ownerOrderNo" column="owner_order_no"/>
        <result property="memNo" column="mem_no"/>
        <result property="fineSubsidySourceCode" column="fine_subsidy_source_code"/>
        <result property="fineSubsidySourceDesc" column="fine_subsidy_source_desc"/>
        <result property="fineAmount" column="fine_amount"/>
        <result property="fineType" column="fine_type"/>
        <result property="fineTypeDesc" column="fine_type_desc"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="createOp" column="create_op"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateOp" column="update_op"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>


	<sql id="Base_Column_List">
        `id`, `order_no`, `owner_order_no`, `mem_no`,
        `fine_subsidy_source_code`, `fine_subsidy_source_desc`,
        `fine_amount`,  `fine_type`, `fine_type_desc`,  `remark`,
        `create_time`, `create_op`, `update_time`,
        `update_op`, `is_delete`
	</sql>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from owner_order_fine_apply where id = #{value}
	</select>

	<insert id="insert" parameterType="com.atzuche.order.ownercost.entity.OwnerOrderFineApplyEntity" useGeneratedKeys="true" keyProperty="id">
		insert into owner_order_fine_apply (
				`order_no`,		
				`owner_order_no`,		
				`mem_no`,		
				`fine_subsidy_source_code`,		
				`fine_subsidy_source_desc`,		
				`fine_amount`,		
				`fine_type`,		
				`fine_type_desc`,		
				`remark`
        )
		values
		(
				#{orderNo}, 		
				#{ownerOrderNo}, 		
				#{memNo}, 		
				#{fineSubsidySourceCode}, 		
				#{fineSubsidySourceDesc}, 		
				#{fineAmount}, 		
				#{fineType}, 		
				#{fineTypeDesc}, 		
				#{remark}
        )
	</insert>
	
	<insert id="insertSelective" parameterType="com.atzuche.order.ownercost.entity.OwnerOrderFineApplyEntity" useGeneratedKeys="true" keyProperty="id">
		insert into owner_order_fine_apply
            <trim prefix="(" suffix=")" suffixOverrides="," >
				<if test="orderNo != null">`order_no`, </if>
				<if test="ownerOrderNo != null">`owner_order_no`, </if>
				<if test="memNo != null">`mem_no`, </if>
				<if test="fineSubsidySourceCode != null">`fine_subsidy_source_code`, </if>
				<if test="fineSubsidySourceDesc != null">`fine_subsidy_source_desc`, </if>
				<if test="fineAmount != null">`fine_amount`, </if>
				<if test="fineType != null">`fine_type`, </if>
				<if test="fineTypeDesc != null">`fine_type_desc`, </if>
				<if test="remark != null">`remark`, </if>
				<if test="createTime != null">`create_time`, </if>
				<if test="createOp != null">`create_op`, </if>
				<if test="updateTime != null">`update_time`, </if>
				<if test="updateOp != null">`update_op`, </if>
				<if test="isDelete != null">`is_delete`, </if>
	        </trim>
            <trim prefix="values (" suffix=")" suffixOverrides="," >
				<if test="orderNo != null">#{orderNo},  </if>
				<if test="ownerOrderNo != null">#{ownerOrderNo},  </if>
				<if test="memNo != null">#{memNo},  </if>
				<if test="fineSubsidySourceCode != null">#{fineSubsidySourceCode},  </if>
				<if test="fineSubsidySourceDesc != null">#{fineSubsidySourceDesc},  </if>
				<if test="fineAmount != null">#{fineAmount},  </if>
				<if test="fineType != null">#{fineType},  </if>
				<if test="fineTypeDesc != null">#{fineTypeDesc},  </if>
				<if test="remark != null">#{remark},  </if>
				<if test="createTime != null">#{createTime},  </if>
				<if test="createOp != null">#{createOp},  </if>
				<if test="updateTime != null">#{updateTime},  </if>
				<if test="updateOp != null">#{updateOp},  </if>
				<if test="isDelete != null">#{isDelete}, </if>
	        </trim>
	</insert>
	
	 
	<update id="updateByPrimaryKeySelective" parameterType="com.atzuche.order.ownercost.entity.OwnerOrderFineApplyEntity">
		update owner_order_fine_apply 
		<set>
            <if test="orderNo != null">`order_no` = #{orderNo}, </if>
            <if test="ownerOrderNo != null">`owner_order_no` = #{ownerOrderNo}, </if>
            <if test="memNo != null">`mem_no` = #{memNo}, </if>
            <if test="fineSubsidySourceCode != null">`fine_subsidy_source_code` = #{fineSubsidySourceCode}, </if>
            <if test="fineSubsidySourceDesc != null">`fine_subsidy_source_desc` = #{fineSubsidySourceDesc}, </if>
            <if test="fineAmount != null">`fine_amount` = #{fineAmount}, </if>
            <if test="fineType != null">`fine_type` = #{fineType}, </if>
            <if test="fineTypeDesc != null">`fine_type_desc` = #{fineTypeDesc}, </if>
            <if test="remark != null">`remark` = #{remark}, </if>
            <if test="createTime != null">`create_time` = #{createTime}, </if>
            <if test="createOp != null">`create_op` = #{createOp}, </if>
            <if test="updateTime != null">`update_time` = #{updateTime}, </if>
            <if test="updateOp != null">`update_op` = #{updateOp}, </if>
            <if test="isDelete != null">`is_delete` = #{isDelete},</if>
        </set>
		where id = #{id}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.atzuche.order.ownercost.entity.OwnerOrderFineApplyEntity">
		update owner_order_fine_apply 
		    <set>
				`order_no` = #{orderNo}, 		
				`owner_order_no` = #{ownerOrderNo}, 		
				`mem_no` = #{memNo}, 		
				`fine_subsidy_source_code` = #{fineSubsidySourceCode}, 		
				`fine_subsidy_source_desc` = #{fineSubsidySourceDesc}, 		
				`fine_amount` = #{fineAmount}, 		
				`fine_type` = #{fineType}, 		
				`fine_type_desc` = #{fineTypeDesc}, 		
				`remark` = #{remark}
		    </set>
		where id = #{id}
	</update>
</mapper>