<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atzuche.order.renterdetain.mapper.RenterDetainUnfreezeMapper">

    <resultMap type="com.atzuche.order.renterdetain.entity.RenterDetainUnfreezeEntity" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="memNo" column="mem_no"/>
        <result property="orderNo" column="order_no"/>
        <result property="renterEventDetainId" column="renter_event_detain_id"/>
        <result property="unfreezeAmt" column="unfreeze_amt"/>
        <result property="reason" column="reason"/>
        <result property="createTime" column="create_time"/>
        <result property="createOp" column="create_op"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateOp" column="update_op"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>


	<sql id="Base_Column_List">
	`id`, 	
	`mem_no`, 	
	`order_no`, 	
	`renter_event_detain_id`, 	
	`unfreeze_amt`, 	
	`reason`, 	
	`create_time`, 	
	`create_op`, 	
	`update_time`, 	
	`update_op`, 	
	`is_delete`	

	</sql>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from renter_detain_unfreeze where id = #{value}
	</select>

	<select id="selectALL" resultMap="BaseResultMap">
		select  <include refid="Base_Column_List" /> from renter_detain_unfreeze com by id desc
	</select>

	 
	<insert id="insert" parameterType="com.atzuche.order.renterdetain.entity.RenterDetainUnfreezeEntity" useGeneratedKeys="true" keyProperty="id">
		insert into renter_detain_unfreeze
		(
				`mem_no`,		
				`order_no`,		
				`renter_event_detain_id`,		
				`unfreeze_amt`,		
				`reason`,		
				`create_time`,		
				`create_op`,		
				`update_time`,		
				`update_op`,		
				`is_delete`		
			)
		values
		(
				#{memNo}, 		
				#{orderNo}, 		
				#{renterEventDetainId}, 		
				#{unfreezeAmt}, 		
				#{reason}, 		
				#{createTime}, 		
				#{createOp}, 		
				#{updateTime}, 		
				#{updateOp}, 		
				#{isDelete}		
			)
	</insert>
	
	<insert id="insertSelective" parameterType="com.atzuche.order.renterdetain.entity.RenterDetainUnfreezeEntity" useGeneratedKeys="true" keyProperty="id">
		insert into renter_detain_unfreeze
        <trim prefix="(" suffix=")" suffixOverrides="," >
				<if test="memNo != null">`mem_no`, </if>
				<if test="orderNo != null">`order_no`, </if>
				<if test="renterEventDetainId != null">`renter_event_detain_id`, </if>
				<if test="unfreezeAmt != null">`unfreeze_amt`, </if>
				<if test="reason != null">`reason`, </if>
				<if test="createTime != null">`create_time`, </if>
				<if test="createOp != null">`create_op`, </if>
				<if test="updateTime != null">`update_time`, </if>
				<if test="updateOp != null">`update_op`, </if>
				<if test="isDelete != null">`is_delete` </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
				<if test="memNo != null">#{memNo},  </if>
				<if test="orderNo != null">#{orderNo},  </if>
				<if test="renterEventDetainId != null">#{renterEventDetainId},  </if>
				<if test="unfreezeAmt != null">#{unfreezeAmt},  </if>
				<if test="reason != null">#{reason},  </if>
				<if test="createTime != null">#{createTime},  </if>
				<if test="createOp != null">#{createOp},  </if>
				<if test="updateTime != null">#{updateTime},  </if>
				<if test="updateOp != null">#{updateOp},  </if>
				<if test="isDelete != null">#{isDelete} </if>
        </trim>
	</insert>
	
	 
	<update id="updateByPrimaryKeySelective" parameterType="com.atzuche.order.renterdetain.entity.RenterDetainUnfreezeEntity">
		update renter_detain_unfreeze 
		<set>
				<if test="memNo != null">`mem_no` = #{memNo}, </if>
				<if test="orderNo != null">`order_no` = #{orderNo}, </if>
				<if test="renterEventDetainId != null">`renter_event_detain_id` = #{renterEventDetainId}, </if>
				<if test="unfreezeAmt != null">`unfreeze_amt` = #{unfreezeAmt}, </if>
				<if test="reason != null">`reason` = #{reason}, </if>
				<if test="createTime != null">`create_time` = #{createTime}, </if>
				<if test="createOp != null">`create_op` = #{createOp}, </if>
				<if test="updateTime != null">`update_time` = #{updateTime}, </if>
				<if test="updateOp != null">`update_op` = #{updateOp}, </if>
				<if test="isDelete != null">`is_delete` = #{isDelete}</if>
			</set>
		where id = #{id}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.atzuche.order.renterdetain.entity.RenterDetainUnfreezeEntity">
		update renter_detain_unfreeze 
		<set>
				`mem_no` = #{memNo}, 		
				`order_no` = #{orderNo}, 		
				`renter_event_detain_id` = #{renterEventDetainId}, 		
				`unfreeze_amt` = #{unfreezeAmt}, 		
				`reason` = #{reason}, 		
				`create_time` = #{createTime}, 		
				`create_op` = #{createOp}, 		
				`update_time` = #{updateTime}, 		
				`update_op` = #{updateOp}, 		
				`is_delete` = #{isDelete}		
	
		</set>
		where id = #{id}
	</update>
  	
</mapper>