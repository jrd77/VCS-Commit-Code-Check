<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atzuche.order.rentercommodity.mapper.RenterGoodsPriceDetailMapper">

    <resultMap type="com.atzuche.order.rentercommodity.entity.RenterGoodsPriceDetailEntity" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="renterOrderNo" column="renter_order_no"/>
        <result property="goodsId" column="goods_id"/>
        <result property="carDay" column="car_day"/>
        <result property="carUnitPrice" column="car_unit_price"/>
        <result property="carHourCount" column="car_hour_count"/>
        <result property="revertTime" column="revert_time"/>
        <result property="createTime" column="create_time"/>
        <result property="createOp" column="create_op"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateOp" column="update_op"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>


	<sql id="Base_Column_List">
	`id`, 	
	`order_no`, 	
	`renter_order_no`, 	
	`goods_id`, 	
	`car_day`, 	
	`car_unit_price`, 	
	`car_hour_count`, 	
	`revert_time`,
	`create_time`, 	
	`create_op`, 	
	`update_time`, 	
	`update_op`, 	
	`is_delete`	

	</sql>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from renter_goods_price_detail where id = #{value}
	</select>


	 
	<insert id="insert" parameterType="com.atzuche.order.rentercommodity.entity.RenterGoodsPriceDetailEntity" useGeneratedKeys="true" keyProperty="id">
		insert into renter_goods_price_detail
		(
				`order_no`,		
				`renter_order_no`,		
				`goods_id`,		
				`car_day`,		
				`car_unit_price`,		
				`car_hour_count`,		
				`revert_time`,
				`create_op`,
				`update_op`
				)
		values
		(
                		#{orderNo}, 		
	        		#{renterOrderNo}, 		
	        		#{goodsId}, 		
	        		#{carDay}, 		
	        		#{carUnitPrice}, 		
	        		#{carHourCount}, 		
	        		#{revertTime},
	                #{createOp},
	                #{updateOp}
	        		)
	</insert>
	
	<insert id="insertSelective" parameterType="com.atzuche.order.rentercommodity.entity.RenterGoodsPriceDetailEntity" useGeneratedKeys="true" keyProperty="id">
		insert into renter_goods_price_detail
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orderNo != null">`order_no`, </if>
            <if test="renterOrderNo != null">`renter_order_no`, </if>
            <if test="goodsId != null">`goods_id`, </if>
            <if test="carDay != null">`car_day`, </if>
            <if test="carUnitPrice != null">`car_unit_price`, </if>
            <if test="carHourCount != null">`car_hour_count`, </if>
            <if test="revertTime != null">`revert_time`, </if>
            <if test="createOp != null">`create_op`, </if>
            <if test="updateOp != null">`update_op`</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orderNo != null">#{orderNo},  </if>
            <if test="renterOrderNo != null">#{renterOrderNo},  </if>
            <if test="goodsId != null">#{goodsId},  </if>
            <if test="carDay != null">#{carDay},  </if>
            <if test="carUnitPrice != null">#{carUnitPrice},  </if>
            <if test="carHourCount != null">#{carHourCount},  </if>
            <if test="revertTime != null">#{revertTime},  </if>
            <if test="createOp != null">#{createOp},  </if>
            <if test="updateOp != null">#{updateOp} </if>
        </trim>
	</insert>
	
	 
	<update id="updateByPrimaryKeySelective" parameterType="com.atzuche.order.rentercommodity.entity.RenterGoodsPriceDetailEntity">
		update renter_goods_price_detail 
		<set>
				<if test="orderNo != null">`order_no` = #{orderNo}, </if>
				<if test="renterOrderNo != null">`renter_order_no` = #{renterOrderNo}, </if>
				<if test="goodsId != null">`goods_id` = #{goodsId}, </if>
				<if test="carDay != null">`car_day` = #{carDay}, </if>
				<if test="carUnitPrice != null">`car_unit_price` = #{carUnitPrice}, </if>
				<if test="carHourCount != null">`car_hour_count` = #{carHourCount}, </if>
				<if test="revertTime != null">`revert_time` = #{revertTime}, </if>
				<if test="createOp != null">`create_op` = #{createOp}, </if>
				<if test="updateOp != null">`update_op` = #{updateOp}, </if>
				<if test="isDelete != null">`is_delete` = #{isDelete}</if>
			</set>
		where id = #{id}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.atzuche.order.rentercommodity.entity.RenterGoodsPriceDetailEntity">
		update renter_goods_price_detail 
		<set>
				`order_no` = #{orderNo}, 		
				`renter_order_no` = #{renterOrderNo}, 		
				`goods_id` = #{goodsId}, 		
				`car_day` = #{carDay}, 		
				`car_unit_price` = #{carUnitPrice}, 		
				`car_hour_count` = #{carHourCount}, 		
				`revert_time` = #{revertTime},
				`create_op` = #{createOp},
				`update_op` = #{updateOp},
				`is_delete` = #{isDelete}		
	
		</set>
		where id = #{id}
	</update>

    <select id="selectByRenterOrderNo" resultType="com.atzuche.order.rentercommodity.entity.RenterGoodsPriceDetailEntity">
        select
        <include refid="Base_Column_List"/>
        from renter_goods_price_detail
        where renter_order_no=#{renterOrderNo} and is_delete=0 order by car_day asc
    </select>

<!--auto generated by MybatisCodeHelper on 2019-12-18-->
    <insert id="insertList">
        INSERT INTO renter_goods_price_detail(
        order_no,
        renter_order_no,
        goods_id,
        car_day,
        car_unit_price,
        car_hour_count,
        revert_time,
        create_op,
        update_op

        )VALUES
        <foreach collection="list" item="element" index="index" separator=",">
            (
            #{element.orderNo},
            #{element.renterOrderNo},
            #{element.goodsId},
            #{element.carDay},
            #{element.carUnitPrice},
            #{element.carHourCount},
            #{element.revertTime},
            #{element.createOp},
            #{element.updateOp}
            )
        </foreach>
    </insert>

</mapper>